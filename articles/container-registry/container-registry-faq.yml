### YamlMime:FAQ
metadata:
  title: Azure Container Registry
  description: Answers for frequently asked questions related to the Azure Container Registry service 
  author: sajayantony
  ms.topic: faq
  ms.custom: devx-track-azurecli
  ms.service: azure-container-registry
  ms.date: 10/31/2023
  ms.author: sajaya
title: Frequently asked questions - Azure Container Registry
summary: |
  This article addresses frequently asked questions and known issues about Azure Container Registry.
  
  For registry troubleshooting guidance, see:
  * [Troubleshoot registry login, authentication, and authorization](container-registry-troubleshoot-login-authn-authz.md)
  * [Troubleshoot network issues with registry](container-registry-troubleshoot-access.md)
  * [Troubleshoot registry performance](container-registry-troubleshoot-performance.md)
  

sections:
  - name: Resource management
    questions:
      - question: |
          Can I create an Azure Container Registry (ACR) using an Azure Resource Manager (ARM) template?
        answer: |
          Yes. Here is [a template](https://azure.microsoft.com/resources/templates/container-registry/) that you can use to create a registry.
          
      - question: |
          Is there security vulnerability scanning for images in ACR?
        answer: |
          Yes. See the documentation from [Microsoft Defender for Cloud](/azure/security-center/defender-for-container-registries-introduction), [Twistlock](https://www.twistlock.com/2016/11/07/twistlock-supports-azure-container-registry/) and [Aqua](https://blog.aquasec.com/image-vulnerability-scanning-in-azure-container-registry).
          
      - question: |
          How do I configure Kubernetes with Azure Container Registry?
        answer: |
          See the documentation for [Kubernetes](https://kubernetes.io/docs/concepts/containers/images/) and steps for [Azure Kubernetes Service](/azure/aks/cluster-container-registry-integration).
          
      - question: |
          How do I get admin credentials for a container registry?
        answer: |
          > [!IMPORTANT]
          > The admin user account is designed for a single user to access the registry, mainly for testing purposes. We don't recommend sharing the admin account credentials with multiple users. Individual identity is recommended for users and service principals for headless scenarios. See [Authentication overview](container-registry-authentication.md).
          
          Before getting admin credentials, make sure the registry's admin user is enabled.
          
          To get credentials using the Azure CLI:
          
          ```azurecli
          az acr credential show -n myRegistry
          ```
          
          Using Azure PowerShell:
          
          ```powershell
          Invoke-AzureRmResourceAction -Action listCredentials -ResourceType Microsoft.ContainerRegistry/registries -ResourceGroupName myResourceGroup -ResourceName myRegistry
          ```
          
      - question: |
          How do I get admin credentials in a Resource Manager template?
        answer: |
          > [!IMPORTANT]
          > The admin user account is designed for a single user to access the registry, mainly for testing purposes. We don't recommend sharing the admin account credentials with multiple users. Individual identity is recommended for users and service principals for headless scenarios. See [Authentication overview](container-registry-authentication.md).
          
          Before getting admin credentials, make sure the registry's admin user is enabled.
          
          To get the first password:
          
          ```json
          {
              "password": "[listCredentials(resourceId('Microsoft.ContainerRegistry/registries', 'myRegistry'), '2017-10-01').passwords[0].value]"
          }
          ```
          
          To get the second password:
          
          ```json
          {
              "password": "[listCredentials(resourceId('Microsoft.ContainerRegistry/registries', 'myRegistry'), '2017-10-01').passwords[1].value]"
          }
          ```
          
      - question: |
          Delete of replication fails with Forbidden status although the replication gets deleted using the Azure CLI or Azure PowerShell
        answer: |
          This error occurs when a user has the `Container Registry Contributor and Data Access Configuration Administrator` role on a registry—allowing replica deletion through Azure CLI—but lacks Reader permissions on the subscription. Reader access on the subscription is required to delete replicas through the Portal. To resolve this issue, assign Reader permissions on the subscription to the user:
          
          
          ```azurecli  
          az role assignment create --role "Reader" --assignee user@contoso.com --scope /subscriptions/<subscription_id> 
          ```
          
      - question:  |
          Firewall rules are updated successfully but they don't take effect
        answer: |
          It takes some time to propagate firewall rule changes. After you change firewall settings, wait for a few minutes before verifying this change.
          
  - name: Registry operations
    questions:
      - question: |
          How do I access Docker Registry HTTP API V2?
        answer: |
          ACR supports Docker Registry HTTP API V2. The APIs can be accessed at
          `https://<your registry login server>/v2/`. Example: `https://mycontainerregistry.azurecr.io/v2/`

          
      - question: |
          How can all manifests that aren't referenced by any tag in a repository be deleted?
        answer: |
          If you're on bash:
          
          ```azurecli
          az acr manifest list-metadata --name myRepository --registry myRegistry --query "[?tags[0]==null].digest" --output tsv  | xargs -I% az acr repository delete --name myRegistry ---image myRepository@%
          ```
          
          For PowerShell:
          
          ```azurecli
          az acr manifest list-metadata --name myRepository --repository myRegistry --query "[?tags[0]==null].digest" --output tsv | %{ az acr repository delete --name myRegistry --image myRepository@$_ }
          ```
          
          > [!NOTE] 
          > You can add `-y` in the delete command to skip confirmation.
          
          For more information, see [Delete container images in Azure Container Registry](container-registry-delete.md).
          
      - question: |
          Why does the registry quota usage not reduce after deleting images?
        answer: |
          This situation can occur if the underlying layers are still being referenced by other container images. If you delete an image with no references, the registry usage updates in a few minutes.

      - question:  |
          How do I validate storage quota changes?
        answer: |
          Create an image with a 1GB layer using the following docker file. This step ensures that the image has a layer that isn't shared with any other image in the registry.
          
          ```dockerfile
          FROM alpine
          RUN dd if=/dev/urandom of=1GB.bin  bs=32M  count=32
          RUN ls -lh 1GB.bin
          ```
          
          Build and push the image to your registry using the docker CLI.
          
          ```bash
          docker build -t myregistry.azurecr.io/1gb:latest .
          docker push myregistry.azurecr.io/1gb:latest
          ```
          
          You should be able to see that the storage usage has increased in the Azure portal, or you can query usage using the CLI.
          
          ```azurecli
          az acr show-usage -n myregistry
          ```
          
          Delete the image using the Azure CLI or portal and check the updated usage in a few minutes.
          
          ```azurecli
          az acr repository delete -n myregistry --image 1gb
          ```
          
      - question:  |
          How do I authenticate with my registry when running the CLI in a container?
        answer: |
          You need to run the Azure CLI container by mounting the Docker socket:
          
          ```bash
          docker run -it -v /var/run/docker.sock:/var/run/docker.sock azuresdk/azure-cli-python:dev
          ```
          
          In the container, install `docker`:
          
          ```bash
          apk --update add docker
          ```
          
          Then authenticate with your registry:
          
          ```azurecli
          az acr login -n MyRegistry
          ```
          
      - question:  |
          How to enable TLS 1.2?
        answer: |
          Enable TLS 1.2 by using any recent docker client (version 18.03.0 and above). 
          
          > [!IMPORTANT]
          > Starting January 13, 2020, Azure Container Registry will require all secure connections from servers and applications to use TLS 1.2. Support for TLS 1.0 and 1.1 is retired.
          
      - question:  |
          Does Azure Container Registry support Content Trust?
        answer: |
          Yes, you can use trusted images in Azure Container Registry with [Docker Content Trust](https://docs.docker.com/notary/getting_started/). For details, see [Content Trust in Azure Container Registry](container-registry-content-trust.md).
          
          
          #### Where is the file for the thumbprint located?

          Under `~/.docker/trust/tuf/myregistry.azurecr.io/myrepository/metadata`:
          
          * Public keys and certificates of all roles (except delegation roles) are stored in the `root.json`.
          * Public keys and certificates of the delegation role are stored in the JSON file of its parent role (for example `targets.json` for the `targets/releases` role).
          
          You should verify those public keys and certificates after the overall TUF verification done by the Docker and Notary client.
          
      - question:  |
          How do I grant access to pull or push images without granting permissions to manage the registry resource?
        answer: |
          ACR supports [Microsoft Entra role-bases access control (RBAC) and built-in roles](container-registry-rbac-built-in-roles-overview.md) that provide different levels of Microsoft Entra-based permissions, such as granting image push or pull permissions without granting permissions to the entire registry.

          You can optionally use [Microsoft Entra attribute-based access control (ABAC)] to manage [Microsoft Entra-based repository permissions](container-registry-rbac-abac-repository-permissions.md) and scope role assignments to specific repositories.

      - question:  |
          How do I enable automatic image quarantine for a registry?
        answer: |
          Image quarantine is currently a preview feature of ACR. The quarantine mode of a registry can be enabled so that only images that pass security scans are visible to normal users. For details, see the [ACR GitHub repo](https://github.com/Azure/acr/tree/master/docs/preview/quarantine).
          
      - question:  |
          How do I enable anonymous pull access?
        answer: |
          For more information, see [Make your registry content publicly available](anonymous-pull-access.md).          
      - question:  |
          How do I push nondistributable layers to a registry?
        answer: |
          A nondistributable layer in a manifest contains a URL parameter that content may be fetched from. Some possible use cases for enabling nondistributable layer pushes are for network restricted registries, air-gapped registries with restricted access, or for registries with no internet connectivity.
          
          For example, if you have Network Security Group (NSG) rules set up so that a VM can pull images only from your Azure container registry, Docker will encounter failures when pulling foreign or nondistributable layers. For example, a Windows Server Core image would contain foreign layer references to Azure container registry in its manifest and would fail to pull in this scenario.
          
          To enable pushing of nondistributable layers:
          
          1. Edit the `daemon.json` file, which is located in `/etc/docker/` on Linux hosts and at `C:\ProgramData\docker\config\daemon.json` on Windows Server. Assuming the file was previously empty, add the following contents:
          
             ```json
             {
               "allow-nondistributable-artifacts": ["myregistry.azurecr.io"]
             }
             ```
             > [!NOTE]
             > The value is an array of registry addresses, separated by commas.
          
          2. Save and exit the file.
          
          3. Restart Docker.
          
          When you push images to the registries in the list, their nondistributable layers are pushed to the registry.
          
          > [!WARNING]
          > Nondistributable artifacts typically have restrictions on how and where they can be distributed and shared. Use this feature only to push artifacts to private registries. Ensure that you're in compliance with any terms that cover redistributing nondistributable artifacts.
          
  - name: Diagnostics and health checks
    questions:
      - question:  |
          Check health with `az acr check-health`
        answer: |
          To troubleshoot common environment and registry issues, see [Check the health of an Azure container registry](container-registry-check-health.md).
          
      - question: |
           Docker pull fails with error: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)
        answer: |
           - If this error is a transient issue, then retry may succeed.
           - If `docker pull` fails continuously, then there could be a problem with the Docker daemon. The problem can generally be mitigated by restarting the Docker daemon. 
           - If you continue to see this issue after restarting Docker daemon, then the problem could be some network connectivity issues with the machine. To check if general network on the machine is healthy, run the following command to test endpoint connectivity. The minimum `az acr` version that contains this connectivity check command is 2.2.9. Upgrade your Azure CLI if you're using an older version.
           
            ```azurecli
            az acr check-health -n myRegistry
            ```
          
           - You should always have a retry mechanism on all Docker client operations.
          
      - question:  |
          Docker pull is slow
        answer: |
          Use [the speed tool](http://www.azurespeed.com/Azure/Download) to test your machine network download speed. If machine network is slow, consider using an Azure Virtual Machine (VM) in the same region as your registry to improve network speed.
          
      - question:  |
          Docker push is slow
        answer: |
          Use [the speed tool](http://www.azurespeed.com/Azure/Upload) to test your machine network upload speed. If machine network is slow, consider using Azure VM in the same region as your registry to improve network speed.
          
      - question: |
           Docker push succeeds but docker pull fails with error: unauthorized: authentication required
        answer: |
          This error can happen with the Red Hat version of the Docker daemon, where `--signature-verification` is enabled by default. You can check the Docker daemon options for Red Hat Enterprise Linux (RHEL) or Fedora by running the following command:
          
          ```bash
          grep OPTIONS /etc/sysconfig/docker
          ```
          
          For instance, Fedora 28 Server has the following docker daemon options:
          
          `OPTIONS='--selinux-enabled --log-driver=journald --live-restore'`
          
          With `--signature-verification=false` missing, `docker pull` fails with an error similar to:
          
          ```output
          Trying to pull repository myregistry.azurecr.io/myimage ...
          unauthorized: authentication required
          ```
          
          To resolve the error:
          1. Add the option `--signature-verification=false` to the Docker daemon configuration file `/etc/sysconfig/docker`. For example:
             
             `OPTIONS='--selinux-enabled --log-driver=journald --live-restore --signature-verification=false'`
             
          2. Restart the Docker daemon service by running the following command:
             
             ```bash
             sudo systemctl restart docker.service
             ```
          
          Details of `--signature-verification` can be found by running `man dockerd`.
          
      - question: |
           az acr login succeeds but docker fails with error: unauthorized: authentication required
        answer: |
          Make sure you use an all lowercase server URL, for example, `docker push myregistry.azurecr.io/myimage:latest`, even if the registry resource name is uppercase or mixed case, like `myRegistry`.
          
      - question:  |
          Enable and get the debug logs of the Docker daemon    
        answer: |
          Start `dockerd` with the `debug` option. First, create the Docker daemon configuration file (`/etc/docker/daemon.json`) if it doesn't exist, and add the `debug` option:
          
          ```json
          {    
              "debug": true    
          }
          ```
          
          Then, restart the daemon.
          
          ```bash
          sudo service docker restart
          ```
          
          Details can be found in the [Docker documentation](https://docs.docker.com/engine/admin/#enable-debugging).    
          
           * The logs may be generated at different locations, depending on your system. For example, for Ubuntu 14.04, it's `/var/log/upstart/docker.log`.    
          See [Docker documentation](https://docs.docker.com/engine/admin/#read-the-logs) for details.    
          
           * For Docker for Windows, the logs are generated under %LOCALAPPDATA%/docker/. However it may not contain all the debug information yet.    
          
             In order to access the full daemon log, you may need some extra steps:
          
              ```console
              docker run --privileged -it --rm -v /var/run/docker.sock:/var/run/docker.sock -v /usr/local/bin/docker:/usr/local/bin/docker alpine sh
          
              docker run --net=host --ipc=host --uts=host --pid=host -it --security-opt=seccomp=unconfined --privileged --rm -v /:/host alpine /bin/sh
              chroot /host
              ```
              Now you have access to all the files of the VM running `dockerd`. The log is at `/var/log/docker.log`.
          
      - question:  |
          New user permissions may not be effective immediately after updating
        answer: |
          When you grant new permissions (new roles) to a service principal, the change might not take effect immediately. There are two possible reasons:
          
          * Microsoft Entra role assignment delay. Normally it's fast, but it could take minutes due to propagation delay.
          * Permission delay on ACR token server could take up to 10 minutes. To mitigate, you can `docker logout` and then authenticate again with the same user after 1 minute:
          
            ```bash
            docker logout myregistry.azurecr.io
            docker login myregistry.azurecr.io
            ```
          
          Currently ACR doesn't support home replication deletion by the users. The workaround is to include the home replication create in the template but skip its creation by adding `"condition": false` as shown below:
          
          ```json
          {
              "name": "[concat(parameters('acrName'), '/', parameters('location'))]",
              "condition": false,
              "type": "Microsoft.ContainerRegistry/registries/replications",
              "apiVersion": "2017-10-01",
              "location": "[parameters('location')]",
              "properties": {},
              "dependsOn": [
                  "[concat('Microsoft.ContainerRegistry/registries/', parameters('acrName'))]"
               ]
          },
          ```
          
      - question:  |
          Authentication information isn't given in the correct format on direct REST API calls
        answer: |
          You may encounter an `InvalidAuthenticationInfo` error, especially using the `curl` tool with the option `-L`, `--location` (to follow redirects).
          For example, fetching the blob using `curl` with `-L` option and basic authentication:
          
          ```bash
          curl -L -H "Authorization: basic $credential" https://$registry.azurecr.io/v2/$repository/blobs/$digest
          ```
          
          may result in the following response:
          
          ```xml
          <?xml version="1.0" encoding="utf-8"?>
          <Error><Code>InvalidAuthenticationInfo</Code><Message>Authentication information is not given in the correct format. Check the value of Authorization header.
          RequestId:00000000-0000-0000-0000-000000000000
          Time:2019-01-01T00:00:00.0000000Z</Message></Error>
          ```
          
          The root cause is that some `curl` implementations follow redirects with headers from the original request.
          
          To resolve the problem, you need to follow redirects manually without the headers. Print the response headers with the `-D -` option of `curl` and then extract: the `Location` header:
          
          ```bash
          REDIRECT_URL=$(curl -s -D - -H "Authorization: basic $credential" https://$registry.azurecr.io/v2/$repository/blobs/$digest | grep "^Location: " | cut -d " " -f2 | tr -d '\r')
          curl $REDIRECT_URL
          ```
          
      - question:  |
          Why does the Azure portal not list all my repositories or tags? 
        answer: |
          If you're using the Microsoft Edge/IE browser, you can see at most 100 repositories or tags. If your registry has more than 100 repositories or tags, we recommend that you use either the Firefox or Chrome browser to list them all.

      - question:  |
          Why does the Azure portal fail to fetch repositories or tags?
        answer: |
          The browser might not be able to send the request for fetching repositories or tags to the server. There could be various reasons such as:
          
          * Lack of network connectivity
          * Firewall
          * Using the portal from a public network for a registry that allows only private access
          * Ad blockers
          * Domain Name Server (DNS) errors
          
          Contact your network administrator or check your network configuration and connectivity. Try running `az acr check-health -n yourRegistry` using your Azure CLI to check if your environment is able to connect to the Container Registry. In addition, you could also try an incognito or private session in your browser to avoid any stale browser cache or cookies.
          
      - question:  |
          Why does my pull or push request fail with disallowed operation?
        answer: |
          Here are some scenarios where operations may be disallowed:
          * Classic registries are no longer supported. Upgrade to a supported [service tier](./container-registry-skus.md) using [az acr update](/cli/azure/acr#az-acr-update) or the Azure portal.
          * The image or repository maybe locked so that it can't be deleted or updated. You can use the [az acr repository show](./container-registry-image-lock.md) command to view current attributes.
          * Some operations are disallowed if the image is in quarantine. Learn more about [quarantine](https://github.com/Azure/acr/tree/master/docs/preview/quarantine).
          * Your registry may have reached its [storage limit](container-registry-skus.md#service-tier-features-and-limits).
          
      - question:  |
          Repository format is invalid or unsupported
        answer: |
          If you see an error such as "unsupported repository format," "invalid format," or "the requested data does not exist" when specifying a repository name in repository operations, check the spelling and case of the name. Valid repository names can only include lowercase alphanumeric characters, periods, dashes, underscores, and forward slashes. 
          
      - question:  |
          How do I collect http traces on Windows?
        answer: |
          #### Prerequisites

          - Enable [decrypting HTTPS in Fiddler](https://docs.telerik.com/fiddler/Configure-Fiddler/Tasks/DecryptHTTPS)
          - Enable Docker to [use a proxy](https://docs.docker.com/docker-for-windows/#proxies) via the Docker UI.
          - Be sure to revert when complete. Docker doesn't work with this enabled and Fiddler not running.
          
          #### Windows containers

          Configure Docker proxy to 127.0.0.1:8888
          
          #### Linux containers

          Find the ip of the Docker vm virtual switch:
          
          ```powershell
          (Get-NetIPAddress -InterfaceAlias "*Docker*" -AddressFamily IPv4).IPAddress
          ```
          
          Configure the Docker proxy to output of the previous command and the port 8888 (for example 10.0.75.1:8888)
          
  - name: Tasks
    questions:
      - question:  |
          How do I batch cancel runs?
        answer: |
          The following commands cancel all running tasks in the specified registry.
          
          ```azurecli
          az acr task list-runs -r $myregistry --run-status Running --query '[].runId' -o tsv \
          | xargs -I% az acr task cancel-run -r $myregistry --run-id %
          ```
          
      - question:  |
          How do I include the .git folder in az acr build command?
        answer: |
          If you pass a local source folder to the `az acr build` command, the `.git` folder is excluded from the uploaded package by default. You can create a `.dockerignore` file with the following setting. It tells the command to restore all files under `.git` in the uploaded package. 
          
          `!.git/**`
          
          This setting also applies to the `az acr run` command.
          
      - question:  |
          Does Tasks support GitLab for Source triggers?
        answer: |
          We currently don't support GitLab for Source triggers.

      - question:  |
          What git repository management service does Tasks support?
        answer: |
          | Git service | Source context | Manual build | Auto build through commit trigger |
          |---|---|---|---|
          | GitHub | `https://github.com/user/myapp-repo.git#mybranch:myfolder` | Yes | Yes |
          | Azure Repos | `https://dev.azure.com/user/myproject/_git/myapp-repo#mybranch:myfolder` | Yes | Yes |
          | GitLab | `https://gitlab.com/user/myapp-repo.git#mybranch:myfolder` | Yes | No |
          | BitBucket | `https://user@bitbucket.org/user/mayapp-repo.git#mybranch:myfolder` | Yes | No |
          
          ## Run Error Message Troubleshooting

          | Error message | Troubleshooting guide |
          |---|---|
          |No access was configured for the VM, hence no subscriptions were found|This could happen if you're using `az login --identity` in your ACR Task. This error is transient and occurs when the role assignment of your Managed Identity hasn't been propagated yet. Waiting a few seconds before retrying works.|
          
          ## CI/CD integration

          - [CircleCI](https://github.com/Azure/acr/blob/master/docs/integration/CircleCI.md)
          - [GitHub Actions](https://github.com/Azure/acr/blob/master/docs/integration/github-actions/github-actions.md)

      - question:  |
          How to resolve if the Agent pool creation fails due to time-out issues?
        answer: |
          Set up the correct [firewalls rules](./tasks-agent-pools.md#add-firewall-rules) to the existing network security groups or user-defined routes. After the setup, wait a few minutes for the firewall rules to apply.

      - question:  |
          How will enabling the Azure built-in policy for ACR blocks enabling admin credentials?
        answer: |
          The following [Azure built-policy](./policy-reference.md), when set to respective policy status, blocks users from enabling admin user on their registry.
          
          | Azure built-in policy | Policy status | Admin status |
          |---|---|---|
          | Configure container registries to disable local admin account. | Modify | Disable |                      
          | Container registries should have local admin account disabled. | Deny   | Disable |
          | Container registries should have local admin account disabled. | Audit  | non-compliant |
          
additionalContent: |

  ## Next steps
    * [Learn more](container-registry-intro.md) about Azure Container Registry.
